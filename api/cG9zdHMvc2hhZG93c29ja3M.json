{"title":"科学上网：用 VPS 搭建 shadowsocks 服务器","date":"2019-05-15T06:38:46.000Z","date_formatted":{"ll":"May 15, 2019","L":"05/15/2019","MM-DD":"05-15"},"thumbnail":"/posts/shadowsocks/shadowsocks.png","link":"posts/shadowsocks","comments":true,"tags":["VPS","shadowsocks"],"categories":["Linux"],"updated":"2020-04-22T07:20:49.352Z","content":"<h2 id=\"shadowsocks-简介\">shadowsocks 简介<a title=\"#shadowsocks-简介\" href=\"#shadowsocks-简介\"></a></h2>\n<p>shadowsocks 是一款自定义协议的代理软件，由于其流量特征不明显，（直到不久前）一直可以稳定提供上网代理。</p>\n<p>shadowsocks 客户端会在本地开启一个 socks5 代理，通过此代理的网络访问请求由客户端发送至服务端，服务端发出请求，收到响应数据后再发回客户端。</p>\n<p>因此使用 shadowsocks 需要一台墙外的服务器来部署 shadowsocks 服务端。</p>\n<a id=\"more\"></a>\n<h2 id=\"购买-vps-服务器\">购买 VPS 服务器<a title=\"#购买-vps-服务器\" href=\"#购买-vps-服务器\"></a></h2>\n<p>主流的 VPS（虚拟主机）服务器提供商有三家：</p>\n<ul>\n<li>linode</li>\n<li>digital ocean</li>\n<li>bandwagon</li>\n</ul>\n<p>下面的比上面的便宜。如果只是自用，bandwagon 足够。</p>\n<p>一般使用 paypal 绑定一个 visa 或 mastercard 信用卡来付款。注意要用国际 paypal 帐号，国内的是不能用外币付款的。</p>\n<p>在 bandwagon 购买 VPS 以后会获得一个主机地址和用于 ssh 登录的 root 密码。</p>\n<h2 id=\"远程登陆-vps\">远程登陆 VPS<a title=\"#远程登陆-vps\" href=\"#远程登陆-vps\"></a></h2>\n<p>Mac或 Linux 下直接在终端中ssh root@your_vps_ip your_ssh_port即可。<br>\n在 windows 系统下需要专门的客户端来 SSH 登录 VPS。在 <a href=\"http://www.netsarang.com/download/down_form.html?code=522&amp;utm_source=textarea.com&amp;utm_medium=textarea.com&amp;utm_campaign=article\" target=\"_blank\">xShell 官网</a>  下载 xShell。</p>\n<p>家庭和学校用户可以免费试用，下载时选择 home and school use 即可。需要用邮箱注册一下，下载链接会发送到邮箱中。</p>\n<p>xShell 中新建一个连接，会要求输入目标 IP 地址和端口，以及 root 密码，按提示操作即可。</p>\n<h2 id=\"安装-shadowsocks\">安装 shadowsocks<a title=\"#安装-shadowsocks\" href=\"#安装-shadowsocks\"></a></h2>\n<p>最好是centos7</p>\n<p>1.安装pip</p>\n<p>由于安装的是python 版本的 shadowsocks，所以首先安装pip</p>\n<pre><code>$ curl &quot;https://bootstrap.pypa.io/get-pip.py&quot; -o &quot;get-pip.py&quot;\n\n$ python get-pip.py\n</code></pre>\n<p>2.安装shadowsocks</p>\n<pre><code>$ pip install --upgrade pip\n\n$ pip install shadowsocks\n</code></pre>\n<p>3.创建配置文件</p>\n<pre><code>创建文件所在目录:/etc\n</code></pre>\n<p>创建文件命令</p>\n<pre><code>$ vi /etc/shadowsocks.json\n</code></pre>\n<p>若进入了etc目录</p>\n<pre><code>$ vi shadowsocks.json\n</code></pre>\n<p>配置文件内容：</p>\n<p>单端口：</p>\n<figure class=\"highlight ada\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\"></span><br><span class=\"line\"> <span class=\"string\">\"server\"</span>:<span class=\"string\">\"0.0.0.0\"</span>, <span class=\"comment\">--服务器IP，直接用0.0.0.0也可</span></span><br><span class=\"line\"></span><br><span class=\"line\"> <span class=\"string\">\"server_port\"</span>:<span class=\"number\">8888</span>, <span class=\"comment\">--端口端口</span></span><br><span class=\"line\"></span><br><span class=\"line\"> <span class=\"string\">\"local_address\"</span>: <span class=\"string\">\"127.0.0.1\"</span>, <span class=\"comment\">--本地地址，可省略</span></span><br><span class=\"line\"></span><br><span class=\"line\"> <span class=\"string\">\"local_port\"</span>:<span class=\"number\">1080</span>,<span class=\"comment\">--本地端口，可省略</span></span><br><span class=\"line\"></span><br><span class=\"line\"> <span class=\"string\">\"password\"</span>:<span class=\"string\">\"password\"</span>,<span class=\"comment\">--密码</span></span><br><span class=\"line\"></span><br><span class=\"line\"> <span class=\"string\">\"timeout\"</span>:<span class=\"number\">300</span>, <span class=\"comment\">--超时时间，可省略</span></span><br><span class=\"line\"></span><br><span class=\"line\"> <span class=\"string\">\"method\"</span>:<span class=\"string\">\"aes-256-cfb\"</span>, <span class=\"comment\">--加密策略，有多重策略，具体自查</span></span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>多端口：</p>\n<figure class=\"highlight clojure\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\"></span><br><span class=\"line\"> <span class=\"string\">\"server\"</span>:<span class=\"string\">\"0.0.0.0\"</span>,</span><br><span class=\"line\"></span><br><span class=\"line\"> <span class=\"string\">\"local_address\"</span>:<span class=\"string\">\"127.0.0.1\"</span>,</span><br><span class=\"line\"></span><br><span class=\"line\"> <span class=\"string\">\"local_port\"</span>:<span class=\"number\">1080</span>,</span><br><span class=\"line\"></span><br><span class=\"line\"> <span class=\"string\">\"port_password\"</span>:&#123;--每个端口对应一个密码</span><br><span class=\"line\"></span><br><span class=\"line\"> <span class=\"string\">\"1111\"</span>:<span class=\"string\">\"password1\"</span>,</span><br><span class=\"line\"></span><br><span class=\"line\"> <span class=\"string\">\"1112\"</span>:<span class=\"string\">\"password2\"</span>,</span><br><span class=\"line\"></span><br><span class=\"line\"> <span class=\"string\">\"1113\"</span>:<span class=\"string\">\"password3\"</span></span><br><span class=\"line\"></span><br><span class=\"line\"> &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\"> <span class=\"string\">\"timeout\"</span>:<span class=\"number\">300</span>,</span><br><span class=\"line\"></span><br><span class=\"line\"> <span class=\"string\">\"method\"</span>:<span class=\"string\">\"aes-256-cfb\"</span>,</span><br><span class=\"line\"></span><br><span class=\"line\"> <span class=\"string\">\"fast_open\"</span><span class=\"symbol\">:false</span></span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>4.启动shadowsocks</p>\n<p>启动</p>\n<pre><code>ssserver -c /etc/shadowsocks.json -d start\n</code></pre>\n<p>停止</p>\n<pre><code>ssserver -c /etc/shadowsocks.json -d stop\n</code></pre>\n<p>重启</p>\n<pre><code>ssserver -c /etc/shadowsocks.json -d restart\n</code></pre>\n<p>启动成功即可通过ss客户端使用。</p>\n<p>在window端可以在控制台通过以下命令查看端口是否打开</p>\n<pre><code>telnet {ip} {port}\n</code></pre>\n<p>5.配置自启动</p>\n<pre><code>新建启动脚本文件/etc/systemd/system/shadowsocks.service，内容如下：\n</code></pre>\n<p>[Unit]</p>\n<pre><code>Description=Shadowsocks\n</code></pre>\n<p>[Service]</p>\n<pre><code>TimeoutStartSec=0\n\nExecStart=/usr/bin/ssserver -c /etc/shadowsocks.json\n</code></pre>\n<p>[Install]</p>\n<pre><code>WantedBy=multi-user.target\n</code></pre>\n<p>通过以下命令注册，启动服务</p>\n<pre><code>$ systemctl enable shadowsocks\n\n$ systemctl start shadowsocks\n</code></pre>\n<p>启动后可以查看服务状态</p>\n<pre><code>$ systemctl status shadowsocks -l\n</code></pre>\n<p>若启动成功：</p>\n<p>● shadowsocks.service - Shadowsocks</p>\n<p>Loaded: loaded (/etc/systemd/system/shadowsocks.service; enabled; vendor preset: disabled)</p>\n<p>Active: active (running) since Sun 2017-08-13 18:03:41 CST; 1h 29min ago</p>\n<p>Main PID: 9567 (ssserver)</p>\n<p>CGroup: /system.slice/shadowsocks.service</p>\n<p>└─9567 /usr/bin/python2 /usr/bin/ssserver -c /etc/shadowsocks.json<br>\n如果，服务失败，重启服务器试一下</p>\n<h2 id=\"安装并启动-shadowsocks-客户端\">安装并启动 shadowsocks 客户端<a title=\"#安装并启动-shadowsocks-客户端\" href=\"#安装并启动-shadowsocks-客户端\"></a></h2>\n<p>shadowsocks 支持 windows、Mac OS X、Linux、Android、iOS 等多个平台。不过 iOS 由于系统对应用后台运行的限制，推荐使用客户端内嵌的浏览器科学上网，给其他应用代理时需要每过几分钟重新启动一下 app。</p>\n<p>shadowsocks 项目 Github 主页在<a href=\"https://github.com/shadowsocks/shadowsocks?utm_source=textarea.com&amp;utm_medium=textarea.com&amp;utm_campaign=article\" target=\"_blank\">这里</a>。</p>\n<p>里面可以找到客户端下载地址。</p>\n<p>下载安装客户端以后，只需按服务器的配置填写 IP 地址、服务器端口、本地端口（如果没有本地端口选项，就是默认的 1080）、密码、加密方式等参数，启动就可以了。</p>\n<p>客户端支持全局代理和 PAC 代理两种方式，后者会使用一个脚本来自动检查一个网站是否在需要代理的网站列表中，自动选择直接连接或代理连接。</p>\n<p>PAC 列表可以在线更新，但是难免有收录不全的情况。这时可以选择关闭 shadowsocks 代理（实际上是取消对系统代理的配置，shadowsocks 客户端仍然保持工作），然后使用支持自定义规则的代理管理插件来实现自动切换代理，比如 switchyOmega。</p>\n<h2 id=\"使用-switchyomega-实现自动切换代理\">使用 switchyOmega 实现自动切换代理<a title=\"#使用-switchyomega-实现自动切换代理\" href=\"#使用-switchyomega-实现自动切换代理\"></a></h2>\n<pre><code>switchyOmega 是 chrome 浏览器上一个很好用的代理管理插件。它的前身 switchySharp 更有名。\n\nchrome 应用商店本身需要翻墙才能访问，因此需要先在 shadowsocks 启动代理模式下下载安装，再关闭 shadowsocks 代理。\n\n安装完毕后，右击 switchyOmega 图标，选择选项，进入 switchOmega 配置界面。\n</code></pre>\n<h3 id=\"创建-shadowsocks-情景模式\">创建 shadowsocks 情景模式<a title=\"#创建-shadowsocks-情景模式\" href=\"#创建-shadowsocks-情景模式\"></a></h3>\n<pre><code>新建一个情景模式，比如叫 SS，代理协议选择 socks5，代理地址为 127.0.0.1，端口 1080。\n\n现在切换到 SS 情景模式就可以通过 shadowsocks 科学上网了。后面获取自动切换规则列表\n</code></pre>\n<h3 id=\"设置自动切换模式\">设置自动切换模式<a title=\"#设置自动切换模式\" href=\"#设置自动切换模式\"></a></h3>\n<p>在设置界面选择自动切换模式，在 “切换规则” 中勾选“规则列表规则”，对应的情景模式选择刚刚新建的 SS。</p>\n<p>然后在下面的规则列表地址中填写</p>\n<p><a href=\"https://autoproxy-gfwlist.googlecode.com/svn/trunk/gfwlist.txt\" target=\"_blank\" rel=\"noopener\">https://autoproxy-gfwlist.googlecode.com/svn/trunk/gfwlist.txt</a></p>\n<p>规则列表格式选择 AutoProxy。</p>\n<p>然后点击立即更新情景模式， 更新完成后会有提示。</p>\n<p>点击左侧的 “应用选项”。然后单击 switchyOmega 图标，选择自动切换，就可以在访问“不存在的网站” 时自动切换到 shadowsocks 代理了。</p>\n<h3 id=\"添加自定义规则\">添加自定义规则<a title=\"#添加自定义规则\" href=\"#添加自定义规则\"></a></h3>\n<p>如果遇到某个国外网站无法直接连接或速度太慢时，可以单击 switchyOmega 图标，选择 “添加条件”，情景模式选择 SS，就可以了。</p>\n<p>这时打开 switchyOmega 选项，在自动切换模式的切换规则中就可以看到刚刚添加的规则。可以在这里管理自定义的规则。</p>\n<h3 id=\"导入和导出-switchyomega-设置\">导入和导出 switchyOmega 设置<a title=\"#导入和导出-switchyomega-设置\" href=\"#导入和导出-switchyomega-设置\"></a></h3>\n<p>如果换了一台电脑，重新设置一遍 switchyOmega 就太麻烦了。可以在设置好的 switchyOmega 中导出设置文件，在另一个 chrome 浏览器中导入，就可以直接复制原来的设置了。</p>\n<p>在 switchyOmega 选项的左侧点击 “导入 / 导出”，点击“生成备份文件” 即可生成 switchyOmega 设置备份。点击 “从备份文件恢复” 可以导入备份文件。</p>\n","prev":{"title":"squid介绍及其简单配置","link":"posts/squid"},"next":{"title":"Tag Plugins","link":"posts/Tag Plugins"},"plink":"https://shuntan.github.io/posts/shadowsocks/","toc":[{"id":"shadowsocks-简介","title":"shadowsocks 简介","index":"1"},{"id":"购买-vps-服务器","title":"购买 VPS 服务器","index":"2"},{"id":"远程登陆-vps","title":"远程登陆 VPS","index":"3"},{"id":"安装-shadowsocks","title":"安装 shadowsocks","index":"4"},{"id":"安装并启动-shadowsocks-客户端","title":"安装并启动 shadowsocks 客户端","index":"5"},{"id":"使用-switchyomega-实现自动切换代理","title":"使用 switchyOmega 实现自动切换代理","index":"6","children":[{"id":"创建-shadowsocks-情景模式","title":"创建 shadowsocks 情景模式","index":"6.1"},{"id":"设置自动切换模式","title":"设置自动切换模式","index":"6.2"},{"id":"添加自定义规则","title":"添加自定义规则","index":"6.3"},{"id":"导入和导出-switchyomega-设置","title":"导入和导出 switchyOmega 设置","index":"6.4"}]}],"reward":true,"copyright":{"author":"Shawntan","link":"<a href=\"https://shuntan.github.io/posts/shadowsocks/\" title=\"科学上网：用 VPS 搭建 shadowsocks 服务器\">https://shuntan.github.io/posts/shadowsocks/</a>","license":"Attribution-NonCommercial-NoDerivatives 4.0 International (<a href=\\\"https://creativecommons.org/licenses/by-nc-sa/4.0/\\\" rel=\\\"external nofollow noopener\\\" target=\\\"_blank\\\">CC BY-NC-ND 4.0</a>)","published":"May 15, 2019","updated":"April 22, 2020"}}